{
  "contractName": "UserRegistry",
  "abi": [
    {
      "inputs": [
        {
          "name": "fund_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "me",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "78:555:4:-;;;214:64;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:5;260;;:13;;;;;;;;;;;;;;;;;;214:64;78:555;;;;;;",
  "deployedSourceMap": "78:555:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:267;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:267:4;;;;;;282:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;282:78:4;;;;;;;;;;;;;;;;;;;;;;;;;;;364:267;525:9;421:3;407:10;:17;;;;399:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:3;465:5;:17;471:10;465:17;;;;;;;;;;;;;;;;;;;;;;;;;457:33;;;449:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:10;558:5;;;;;;;;;;;537:27;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;537:27:4;525:39;;590:4;570:5;:17;576:10;570:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;606:20;621:4;606:20;;;;;;;;;;;;;;;;;;;;;;364:267;:::o;282:78::-;319:4;338:5;:17;344:10;338:17;;;;;;;;;;;;;;;;;;;;;;;;;331:24;;282:78;:::o;78:555::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./User.sol\";\nimport \"./InsuranceFund.sol\";\n\ncontract UserRegistry {\n  mapping(address => User) private users;\n  InsuranceFund private _fund;\n\n  event UserRegistered(User user);\n\n  constructor(InsuranceFund fund_) public {\n    _fund = fund_;\n  }\n\n  function me() external view returns (User) {\n    return users[msg.sender];\n  }\n\n  function register() external {\n    require(msg.sender != 0x0, \"Wrong address.\");\n    require(address(users[msg.sender]) == 0x0, \"You already registered.\");\n\n    User user = new User(msg.sender, _fund);\n    users[msg.sender] = user;\n\n    emit UserRegistered(user);\n  }\n}\n",
  "sourcePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/UserRegistry.sol",
  "ast": {
    "absolutePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/UserRegistry.sol",
    "exportedSymbols": {
      "UserRegistry": [
        770
      ]
    },
    "id": 771,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 692,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/User.sol",
        "file": "./User.sol",
        "id": 693,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 691,
        "src": "26:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/InsuranceFund.sol",
        "file": "./InsuranceFund.sol",
        "id": 694,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 134,
        "src": "47:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          690
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 770,
        "linearizedBaseContracts": [
          770
        ],
        "name": "UserRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 698,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 770,
            "src": "104:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
              "typeString": "mapping(address => contract User)"
            },
            "typeName": {
              "id": 697,
              "keyType": {
                "id": 695,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "112:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "104:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                "typeString": "mapping(address => contract User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 696,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 690,
                "src": "123:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_User_$690",
                  "typeString": "contract User"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 700,
            "name": "_fund",
            "nodeType": "VariableDeclaration",
            "scope": 770,
            "src": "146:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsuranceFund_$133",
              "typeString": "contract InsuranceFund"
            },
            "typeName": {
              "contractScope": null,
              "id": 699,
              "name": "InsuranceFund",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 133,
              "src": "146:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsuranceFund_$133",
                "typeString": "contract InsuranceFund"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 704,
            "name": "UserRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "indexed": false,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "199:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$690",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 701,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 690,
                    "src": "199:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:11:4"
            },
            "src": "178:32:4"
          },
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "254:24:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "_fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "260:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuranceFund_$133",
                        "typeString": "contract InsuranceFund"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 710,
                      "name": "fund_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "268:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuranceFund_$133",
                        "typeString": "contract InsuranceFund"
                      }
                    },
                    "src": "260:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuranceFund_$133",
                      "typeString": "contract InsuranceFund"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "260:13:4"
                }
              ]
            },
            "documentation": null,
            "id": 714,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "name": "fund_",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "226:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InsuranceFund_$133",
                    "typeString": "contract InsuranceFund"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 705,
                    "name": "InsuranceFund",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 133,
                    "src": "226:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuranceFund_$133",
                      "typeString": "contract InsuranceFund"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:21:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:0:4"
            },
            "scope": 770,
            "src": "214:64:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 724,
              "nodeType": "Block",
              "src": "325:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 719,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "338:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                        "typeString": "mapping(address => contract User)"
                      }
                    },
                    "id": 722,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "344:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "344:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "338:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "functionReturnParameters": 718,
                  "id": 723,
                  "nodeType": "Return",
                  "src": "331:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 725,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "me",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "319:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$690",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 716,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 690,
                    "src": "319:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:6:4"
            },
            "scope": 770,
            "src": "282:78:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 768,
              "nodeType": "Block",
              "src": "393:238:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 729,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "407:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "407:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "421:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "407:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e6720616464726573732e",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "426:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d241e9ae9ee43c58d6be4ccb2411239053455bf589d06b5e198087bda17dc8dd",
                          "typeString": "literal_string \"Wrong address.\""
                        },
                        "value": "Wrong address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d241e9ae9ee43c58d6be4ccb2411239053455bf589d06b5e198087bda17dc8dd",
                          "typeString": "literal_string \"Wrong address.\""
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        788,
                        789
                      ],
                      "referencedDeclaration": 789,
                      "src": "399:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "399:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 738,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 698,
                                "src": "465:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                                  "typeString": "mapping(address => contract User)"
                                }
                              },
                              "id": 741,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 739,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 785,
                                  "src": "471:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "471:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "465:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$690",
                                "typeString": "contract User"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_User_$690",
                                "typeString": "contract User"
                              }
                            ],
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "457:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "457:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "487:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "457:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520616c726561647920726567697374657265642e",
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "492:25:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9772f7e6b840a3292a2dd79c7bb2d24719069c821132b487d1a6ea57ab3cfcf0",
                          "typeString": "literal_string \"You already registered.\""
                        },
                        "value": "You already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9772f7e6b840a3292a2dd79c7bb2d24719069c821132b487d1a6ea57ab3cfcf0",
                          "typeString": "literal_string \"You already registered.\""
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        788,
                        789
                      ],
                      "referencedDeclaration": 789,
                      "src": "449:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:69:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "449:69:4"
                },
                {
                  "assignments": [
                    749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 749,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "525:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$690",
                        "typeString": "contract User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 748,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 690,
                        "src": "525:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "546:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "546:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "558:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InsuranceFund_$133",
                          "typeString": "contract InsuranceFund"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_InsuranceFund_$133",
                          "typeString": "contract InsuranceFund"
                        }
                      ],
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "537:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_InsuranceFund_$133_$returns$_t_contract$_User_$690_$",
                        "typeString": "function (address,contract InsuranceFund) returns (contract User)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 750,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 690,
                        "src": "541:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "525:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 757,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "570:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                          "typeString": "mapping(address => contract User)"
                        }
                      },
                      "id": 760,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 758,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "576:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "576:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "570:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$690",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 761,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "590:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$690",
                        "typeString": "contract User"
                      }
                    },
                    "src": "570:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "570:24:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "621:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      ],
                      "id": 764,
                      "name": "UserRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "606:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_User_$690_$returns$__$",
                        "typeString": "function (contract User)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "EmitStatement",
                  "src": "601:25:4"
                }
              ]
            },
            "documentation": null,
            "id": 769,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:4"
            },
            "scope": 770,
            "src": "364:267:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 771,
        "src": "78:555:4"
      }
    ],
    "src": "0:634:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/UserRegistry.sol",
    "exportedSymbols": {
      "UserRegistry": [
        770
      ]
    },
    "id": 771,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 692,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/User.sol",
        "file": "./User.sol",
        "id": 693,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 691,
        "src": "26:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yurakulynych/Documents/study/mutual-insurance/contracts/InsuranceFund.sol",
        "file": "./InsuranceFund.sol",
        "id": 694,
        "nodeType": "ImportDirective",
        "scope": 771,
        "sourceUnit": 134,
        "src": "47:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          690
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 770,
        "linearizedBaseContracts": [
          770
        ],
        "name": "UserRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 698,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 770,
            "src": "104:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
              "typeString": "mapping(address => contract User)"
            },
            "typeName": {
              "id": 697,
              "keyType": {
                "id": 695,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "112:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "104:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                "typeString": "mapping(address => contract User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 696,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 690,
                "src": "123:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_User_$690",
                  "typeString": "contract User"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 700,
            "name": "_fund",
            "nodeType": "VariableDeclaration",
            "scope": 770,
            "src": "146:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsuranceFund_$133",
              "typeString": "contract InsuranceFund"
            },
            "typeName": {
              "contractScope": null,
              "id": 699,
              "name": "InsuranceFund",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 133,
              "src": "146:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsuranceFund_$133",
                "typeString": "contract InsuranceFund"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 704,
            "name": "UserRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "indexed": false,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "199:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$690",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 701,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 690,
                    "src": "199:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:11:4"
            },
            "src": "178:32:4"
          },
          {
            "body": {
              "id": 713,
              "nodeType": "Block",
              "src": "254:24:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "_fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "260:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuranceFund_$133",
                        "typeString": "contract InsuranceFund"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 710,
                      "name": "fund_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "268:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsuranceFund_$133",
                        "typeString": "contract InsuranceFund"
                      }
                    },
                    "src": "260:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuranceFund_$133",
                      "typeString": "contract InsuranceFund"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "260:13:4"
                }
              ]
            },
            "documentation": null,
            "id": 714,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "name": "fund_",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "226:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InsuranceFund_$133",
                    "typeString": "contract InsuranceFund"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 705,
                    "name": "InsuranceFund",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 133,
                    "src": "226:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsuranceFund_$133",
                      "typeString": "contract InsuranceFund"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:21:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:0:4"
            },
            "scope": 770,
            "src": "214:64:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 724,
              "nodeType": "Block",
              "src": "325:35:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 719,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "338:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                        "typeString": "mapping(address => contract User)"
                      }
                    },
                    "id": 722,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 720,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "344:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "344:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "338:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "functionReturnParameters": 718,
                  "id": 723,
                  "nodeType": "Return",
                  "src": "331:24:4"
                }
              ]
            },
            "documentation": null,
            "id": 725,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "me",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "319:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$690",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 716,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 690,
                    "src": "319:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "318:6:4"
            },
            "scope": 770,
            "src": "282:78:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 768,
              "nodeType": "Block",
              "src": "393:238:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 729,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "407:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "407:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "421:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "407:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57726f6e6720616464726573732e",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "426:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d241e9ae9ee43c58d6be4ccb2411239053455bf589d06b5e198087bda17dc8dd",
                          "typeString": "literal_string \"Wrong address.\""
                        },
                        "value": "Wrong address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d241e9ae9ee43c58d6be4ccb2411239053455bf589d06b5e198087bda17dc8dd",
                          "typeString": "literal_string \"Wrong address.\""
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        788,
                        789
                      ],
                      "referencedDeclaration": 789,
                      "src": "399:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "399:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 738,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 698,
                                "src": "465:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                                  "typeString": "mapping(address => contract User)"
                                }
                              },
                              "id": 741,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 739,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 785,
                                  "src": "471:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "471:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "465:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$690",
                                "typeString": "contract User"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_User_$690",
                                "typeString": "contract User"
                              }
                            ],
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "457:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "457:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "487:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "457:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520616c726561647920726567697374657265642e",
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "492:25:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9772f7e6b840a3292a2dd79c7bb2d24719069c821132b487d1a6ea57ab3cfcf0",
                          "typeString": "literal_string \"You already registered.\""
                        },
                        "value": "You already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9772f7e6b840a3292a2dd79c7bb2d24719069c821132b487d1a6ea57ab3cfcf0",
                          "typeString": "literal_string \"You already registered.\""
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        788,
                        789
                      ],
                      "referencedDeclaration": 789,
                      "src": "449:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:69:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "449:69:4"
                },
                {
                  "assignments": [
                    749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 749,
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "525:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$690",
                        "typeString": "contract User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 748,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 690,
                        "src": "525:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "546:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "546:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "558:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InsuranceFund_$133",
                          "typeString": "contract InsuranceFund"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_InsuranceFund_$133",
                          "typeString": "contract InsuranceFund"
                        }
                      ],
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "537:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_InsuranceFund_$133_$returns$_t_contract$_User_$690_$",
                        "typeString": "function (address,contract InsuranceFund) returns (contract User)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 750,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 690,
                        "src": "541:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "525:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 757,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "570:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$690_$",
                          "typeString": "mapping(address => contract User)"
                        }
                      },
                      "id": 760,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 758,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "576:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "576:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "570:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$690",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 761,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "590:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$690",
                        "typeString": "contract User"
                      }
                    },
                    "src": "570:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$690",
                      "typeString": "contract User"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "570:24:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "621:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_User_$690",
                          "typeString": "contract User"
                        }
                      ],
                      "id": 764,
                      "name": "UserRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "606:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_User_$690_$returns$__$",
                        "typeString": "function (contract User)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "EmitStatement",
                  "src": "601:25:4"
                }
              ]
            },
            "documentation": null,
            "id": 769,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:4"
            },
            "scope": 770,
            "src": "364:267:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 771,
        "src": "78:555:4"
      }
    ],
    "src": "0:634:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x90005c5559b2b76785fbfa59b5f962eb68cbfd78",
      "transactionHash": "0xf19a87b549f8e922d42e6313358a385b815d44b6fe77b307b7fa36e04aa4866c"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-02T07:31:37.789Z"
}